import numpy as np
import cv2
from transformation import DLT2D
world_points = np.array([
    (0, 0), (1,0), (2,0), (3,0), (4,0), (5,0),(6,0), (7,0),(7.92,0),
    (0,1), (7.92,1),(0,2),(7.92,2),(0,3),(7.92,3),
    (0,3.92),(1,3.92), (2,3.92), (3,3.92), (4,3.92), (5,3.92),(6,3.92), (7,3.92),(7.92,3.92)

])
image_points = np.array([
(426,61),
(437,78),
(450,99),
(464,127),
(485,157),
(509,195),
(539,243),
(580,304),
(631,378),
(363,64),
(506,386),
(298,68),
(352,391),
(229,71),
(199,400),
(169,70),
(163,91),
(157,114),
(145,143),
(132,176),
(116,216),
(94,267),
(69,328),
(40,409),
])
H,_ = cv2.findHomography(image_points,world_points)
print(image_points.shape,world_points.shape)
print(H)
np.save('matrix.npy', H)